# -*- coding: utf-8 -*-
"""
This code is used to generate simulation star images through RightAscension & 
Declination of the stars in FOV of CCD.

The project model of one star is described in 'project_1s' function.

According to the project model, the main star is projected to the center of the 
image. The neighbor star whose AD (angular distance) with main star is less than 
FOV_max is project in the image.

Written in 2020.04.13, revised in 2022.12.06
By Zhiyuan You
"""

import cv2
import numpy as np
import os

from easydict import EasyDict

from utils.simulator_helper import simulate_one_star
from utils.vis_helper import vis_lines


# CN: Catalog Number
# VM: Visual Magnitude
# RA: Right Ascension
# Dec: Declination
# AD: Angular Distance
# vx,vy,vz: unit vector generated by RA & Dec or pixel coordinate
# x,y: the project coordinate
# _ms: main star
# _ns: neighbor star
# _thre: threshold
# _1s: one star
# _2s: double star


def simulate_star_image(
    f_sao_name, database_txt_dir, database_pic_dir, para, visualization=True
):
    # read the SAO database
    with open(f_sao_name) as fr:
        lines = fr.readlines()

    num_star = len(lines)
    for i_ms in range(num_star):
        CN_ms = lines[i_ms].strip().split()[0]
        lines_out = simulate_one_star(lines, i_ms, para)
        if lines_out:
            # save generated txt file
            txt_path = os.path.join(database_txt_dir, str(CN_ms) + ".txt")
            with open(txt_path, "w") as fw:
                for line in lines_out:
                    fw.write(line)
            # save generated image
            if visualization:
                img_path = os.path.join(database_pic_dir, str(CN_ms) + ".jpg")
                img = vis_lines(lines_out, para)
                cv2.imwrite(img_path, img)
                print(f"Successfully generate txt file and image for {CN_ms}")
            else:
                print(f"Successfully generate txt file for {CN_ms}")


if __name__ == "__main__":
    # simulation parameter
    para = EasyDict({})
    para.AD_2s_thre = 0.19  # AD threshold for 2 star systme
    para.FOV_x = 20  # FOV
    para.FOV_y = 20
    para.FOV_max = np.sqrt((para.FOV_x / 2) ** 2 + (para.FOV_y / 2) ** 2)
    para.N_x = 1024  # resolution
    para.N_y = 1024
    para.VM_thre = 6.0
    para.R_max = 5
    para.Color = (255, 255, 255)

    f_sao_name = f"./database/sao_VM_thre{para.VM_thre}.txt"

    # create database pic dir to save simulation image
    database_pic_dir = "./database/pic_star_image"
    os.makedirs(database_pic_dir, exist_ok=True)

    # create database txt dir to save simulation txt file
    # txt format:
    # 0 row: CN_ms,VM_ms,x_ms,y_ms
    # other rows: CN_ns,VM_ns,x_ns,y_ns
    database_txt_dir = "./database/txt_star_image"
    os.makedirs(database_txt_dir, exist_ok=True)

    simulate_star_image(f_sao_name, database_txt_dir, database_pic_dir, para)
